version: '3'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: microservices
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DATABASE_URL: mysql+pymysql://user:password@mysql:3306/microservices
      JWT_SECRET: your_jwt_secret
    networks:
      - microservices-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "3002:3002"
    depends_on:
      mysql:
        condition: service_healthy
      auth-service:
        condition: service_started
    environment:
      DATABASE_URL: mysql+pymysql://user:password@mysql:3306/microservices
      JWT_SECRET: your_jwt_secret
      AUTH_SERVICE_URL: http://auth-service:3001
    networks:
      - microservices-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  analytics-service:
    build: ./analytics-service
    container_name: analytics-service
    ports:
      - "3004:3004"
    networks:
      - microservices-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3004/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
      analytics-service:
        condition: service_started
    environment:
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      ANALYTICS_SERVICE_URL: http://analytics-service:3004
    networks:
      - microservices-network
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      api-gateway:
        condition: service_started
    environment:
      REACT_APP_API_URL: /api
    networks:
      - microservices-network
    restart: on-failure

networks:
  microservices-network:
    driver: bridge

volumes:
  mysql_data: 